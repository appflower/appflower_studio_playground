<?php

if (!in_array('sfPropelPlugin', sfProjectConfiguration::getActive()->getPlugins()))
{
  return false;
}

require_once dirname(__FILE__).'/sfTaskExtraPropelBaseTask.class.php';

/**
 * Builds form filter classes in the application lib directory.
 * 
 * @package    sfTaskExtraPlugin
 * @subpackage task
 * @author     Kris Wallsmith <kris.wallsmith@symfony-project.com>
 * @version    SVN: $Id: sfPropelBuildAppFiltersTask.class.php 28187 2010-02-22 16:53:57Z Kris.Wallsmith $
 */
class sfPropelBuildAppFiltersTask extends sfTaskExtraPropelBaseTask
{
  /**
   * @see sfTask
   */
  protected function configure()
  {
    $this->addArguments(array(
      new sfCommandArgument('application', sfCommandArgument::REQUIRED, 'The application name'),
    ));

    $this->namespace = 'propel';
    $this->name = 'build-app-filters';

    $this->briefDescription = 'Builds form filter classes in the application lib directory';

    $this->detailedDescription = <<<EOF
The [propel:build-app-filters|INFO] task generates extensions of model form
filters in an application's [lib/filter/|COMMENT] directory:

    [php symfony propel:build-app-filters frontend|INFO]

The generated stub classes will be named in the format [%app%%model%FormFilter|COMMENT]
and will extend the stub form classes generated by the [propel:build-filters|COMMENT]
task. For example, [frontendArticleFormFilter|COMMENT] may be generated, which would
extend [ArticleFormFilter|COMMENT].

You can provide a custom skeleton for this task by creating the following
directory structure in your project:

    data/
      skeleton/
        propel_app_form_filter/
          form.class.php
EOF;
  }

  /**
   * @see sfTask
   */
  protected function execute($arguments = array(), $options = array())
  {
    $this->checkAppExists($arguments['application']);

    // skeleton directory
    if (is_readable(sfConfig::get('sf_data_dir').'/skeleton/propel_app_form_filter'))
    {
      $skeletonDir = sfConfig::get('sf_data_dir').'/skeleton/propel_app_form_filter';
    }
    else
    {
      $skeletonDir = dirname(__FILE__).'/skeleton/app_form_filter';
    }

    // target directory
    if (!file_exists($file = sfConfig::get('sf_app_lib_dir').'/filter'))
    {
      $this->getFilesystem()->mkdirs($file);
    }

    // constants
    $properties = parse_ini_file(sfConfig::get('sf_config_dir').'/properties.ini', true);
    $constants = array(
      'PROJECT'     => isset($properties['symfony']['name']) ? $properties['symfony']['name'] : 'symfony',
      'AUTHOR'      => isset($properties['symfony']['author']) ? $properties['symfony']['author'] : 'Your name here',
      'APPLICATION' => $arguments['application'],
    );

    foreach ($this->loadModels() as $model)
    {
      $file = sfConfig::get('sf_app_lib_dir').'/filter/'.$arguments['application'].$model.'FormFilter.class.php';
      if (class_exists($model.'FormFilter') && !file_exists($file))
      {
        $this->getFilesystem()->copy($skeletonDir.'/form.class.php', $file);
        $this->getFilesystem()->replaceTokens($file, '##', '##', $constants + array('MODEL' => $model));
      }
    }

    $this->reloadAutoload();
  }
}
